{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["MyNumber","props","handleChange","evt","setState","html","target","value","console","log","handleKeyPress","key","handleFinishedInput","handleBlur","alert","state","render","innerRef","contentEditable","disabled","onChange","onKeyPress","onBlur","tagName","React","createRef","Component","App","style","display","justifyContent","alignItems","width","padding","background","marginRight","marginLeft","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"8OAIMA,G,wDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAMRC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEC,KAAMF,EAAIG,OAAOC,QACjCC,QAAQC,IAAI,WAAYN,EAAIG,OAAOC,MAAOJ,IATzB,EAYnBO,eAAiB,SAACP,GACA,UAAZA,EAAIQ,KAAiB,EAAKC,oBAAoBT,IAbjC,EAgBnBU,WAAa,SAACV,GACZK,QAAQC,IAAI,OAAQN,GACpB,EAAKS,oBAAoBT,IAlBR,EAqBnBS,oBAAsB,SAACT,GACrBW,MAAM,EAAKC,MAAMV,OAtBA,EAyBnBW,OAAS,kBACP,cAAC,IAAD,CACEC,SAAU,EAAKC,gBACfb,KAAM,EAAKU,MAAMV,KACjBc,UAAU,EACVC,SAAU,EAAKlB,aACfmB,WAAY,EAAKX,eACjBY,OAAQ,EAAKT,WACbU,QAAQ,UA9BV,EAAKL,gBAAkBM,IAAMC,YAC7B,EAAKV,MAAQ,CAAEV,KAAMJ,EAAMM,OAJV,E,UADEiB,IAAME,YAgEdC,EAzBH,WAIV,OACE,sBACEC,MAAO,CACLC,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZC,MAAO,QACPC,QAAS,SACTC,WAAY,WAPhB,UAUE,sBAAMN,MAAO,CAAEO,YAAa,QAA5B,0BACA,iCACE,cAAC,EAAD,CAAU5B,MAfF,WAgBR,sBAAMqB,MAAO,CAAEQ,WAAY,UAA3B,SAjBM,WAmBR,sBAAMR,MAAO,CAAEQ,WAAY,QAA3B,8BCnDSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAAS9B,OACP,cAAC,IAAM+B,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dac4e389.chunk.js","sourcesContent":["import React from \"react\";\nimport ContentEditable from \"react-contenteditable\";\nimport \"./App.css\";\n\nclass MyNumber extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.contentEditable = React.createRef();\n    this.state = { html: props.value };\n  }\n\n  handleChange = (evt) => {\n    this.setState({ html: evt.target.value });\n    console.log(\"Change: \", evt.target.value, evt);\n  };\n\n  handleKeyPress = (evt) => {\n    if (evt.key === \"Enter\") this.handleFinishedInput(evt);\n  };\n\n  handleBlur = (evt) => {\n    console.log(\"Blur\", evt);\n    this.handleFinishedInput(evt);\n  };\n\n  handleFinishedInput = (evt) => {\n    alert(this.state.html);\n  };\n\n  render = () => (\n    <ContentEditable\n      innerRef={this.contentEditable}\n      html={this.state.html} // innerHTML of the editable div\n      disabled={false} // use true to disable editing\n      onChange={this.handleChange} // handle innerHTML change\n      onKeyPress={this.handleKeyPress}\n      onBlur={this.handleBlur}\n      tagName=\"span\" // Use a custom HTML tag (uses a div by default)\n    />\n  );\n}\n\nconst App = () => {\n  const cur = \"GBP\";\n  const value = \"100000\";\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        width: \"30rem\",\n        padding: \"0.5rem\",\n        background: \"#aaaaaa\",\n      }}\n    >\n      <span style={{ marginRight: \"1rem\" }}>üòÄ</span>\n      <span>\n        <MyNumber value={value} />\n        <span style={{ marginLeft: \"0.5rem\" }}>{cur}</span>\n      </span>\n      <span style={{ marginLeft: \"1rem\" }}>üëç</span>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}